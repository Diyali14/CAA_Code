module comple(
    input[3:0] inp,
    output[3:0] out
    );
    
    assign out[0]=inp[0];
    assign out[1]=((!inp[1])&(inp[0])) | ((inp[1])&(!inp[0]));
    assign out[2]=((inp[2])&(!inp[1])&(!inp[0])) | ((!inp[2])&(inp[0])) | ((!inp[2])&(inp[1]));
    assign out[3]= ((!inp[3])&(inp[2])) | ((!inp[3])&(inp[0])) | ((!inp[3])&(inp[1])) | ((inp[3])&(!inp[2])&(!inp[1])&(!inp[0])); 
    
endmodule

module comple_tb();

reg[3:0] inp;
wire[3:0] out;

comple uut(.inp(inp),.out(out));

initial begin
for(inp=0;inp<16;inp=inp+1)
begin
#25;
end
end
endmodule
