module t_flip_flop(
    input t,
    input pre,
    input clr,
    input clk,
    output p,
    output q
    );
    
    reg qm=0;
    
    always@(posedge clk)
    if(pre==1)
    begin
    qm=1;
    end
    else if (clr==1)
    begin
    qm=0;
    end
    else if(t==1)
    begin
    qm=~p;
    end
    else
    begin
    qm=p;
    end
    
    assign p=qm;
    assign q=~p;
    
endmodule

module t_flip_flop_tb();

reg t;
reg pre;
reg clr;
reg clk;
wire p;
wire q;

t_flip_flop uut(.t(t),.pre(pre),.clr(clr),.clk(clk),.p(p),.q(q));

initial begin

clk=0;

t=0;
pre=1;
clr=0;
#100;
t=1;
pre=0;
clr=0;
#100;
t=1;
pre=0;
clr=0;
#100;
t=1;
pre=0;
clr=1;
#100;
t=0;
pre=1;
clr=0;
#100;
t=1;
pre=0;
clr=0;
#100;

end
always #50 clk=~clk;
endmodule
