module d_flipflop(
    input d,
    input pre,
    input clr,
    input clk,
    output s,
    output r
    );
    
    reg qm=0;
    
    always@(posedge clk)
    if(pre==1)
    begin
    qm=1;
    end
    else if (clr==1)
    begin
    qm=0;
    end
    else
    begin
    qm=d;
    end
    
    assign s=qm;
    assign r=~s;
endmodule

module d_flipflop_tb();

reg d;
reg pre;
reg clr;
reg clk;
wire s;
wire r;

d_flipflop uut(.d(d),.pre(pre),.clr(clr),.clk(clk),.s(s),.r(r));

initial begin

clk=0;

d=0;
pre=1;
clr=0;
#100;
d=1;
pre=0;
clr=0;
#100;
d=0;
pre=0;
clr=0;
#100;
d=0;
pre=0;
clr=1;
#100;
d=0;
pre=1;
clr=0;
#100;
d=1;
pre=0;
clr=0;
#100;

end
always #50 clk=~clk;
endmodule
